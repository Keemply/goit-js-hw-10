{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\nlet userSelectedDate = null;\nconst button = document.querySelector('button[data-start]');\nbutton.setAttribute('disabled', true);\nconst values = document.querySelectorAll('.value');\nconst timer = {\n  currentDate: '',\n  selectedDate: '',\n  intervalID: null,\n  valueIndex: 0,\n  tick() {\n    const currentTick = convertMs(timer.selectedDate - timer.currentDate);\n    timer.valueIndex = 0;\n    Object.values(currentTick).forEach(value => {\n      values[timer.valueIndex].textContent = value.toString().padStart(2, '0');\n      timer.valueIndex++;\n    });\n    timer.selectedDate -= 1000;\n\n    if (Object.values(currentTick).filter(value => value === 0).length === 4) {\n      clearInterval(timer.intervalID);\n      button.removeAttribute('disabled', false);\n    }\n  },\n  startTimer() {\n    timer.intervalID = setInterval(timer.tick, 1000);\n    button.setAttribute('disabled', true);\n  },\n};\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate.getTime() <= this.now) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      button.setAttribute('disabled', true);\n    } else {\n      button.removeAttribute('disabled', false);\n      timer.currentDate = this.now.getTime();\n      timer.selectedDate = userSelectedDate.getTime();\n    }\n  },\n};\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nbutton.addEventListener('click', timer.startTimer);\nconst inpu = document.querySelector('#datetime-picker');\nconst check = flatpickr(inpu, options);\n"],"names":["userSelectedDate","button","values","timer","currentTick","convertMs","value","options","selectedDates","iziToast","ms","days","hours","minutes","seconds","inpu","flatpickr"],"mappings":"+IAOA,IAAIA,EAAmB,KACvB,MAAMC,EAAS,SAAS,cAAc,oBAAoB,EAC1DA,EAAO,aAAa,WAAY,EAAI,EACpC,MAAMC,EAAS,SAAS,iBAAiB,QAAQ,EAC3CC,EAAQ,CACZ,YAAa,GACb,aAAc,GACd,WAAY,KACZ,WAAY,EACZ,MAAO,CACL,MAAMC,EAAcC,EAAUF,EAAM,aAAeA,EAAM,WAAW,EACpEA,EAAM,WAAa,EACnB,OAAO,OAAOC,CAAW,EAAE,QAAQE,GAAS,CAC1CJ,EAAOC,EAAM,UAAU,EAAE,YAAcG,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EACvEH,EAAM,YACZ,CAAK,EACDA,EAAM,cAAgB,IAElB,OAAO,OAAOC,CAAW,EAAE,OAAOE,GAASA,IAAU,CAAC,EAAE,SAAW,IACrE,cAAcH,EAAM,UAAU,EAC9BF,EAAO,gBAAgB,WAAY,EAAK,EAE3C,EACD,YAAa,CACXE,EAAM,WAAa,YAAYA,EAAM,KAAM,GAAI,EAC/CF,EAAO,aAAa,WAAY,EAAI,CACrC,CACH,EACMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBR,EAAmBQ,EAAc,CAAC,EAC9BR,EAAiB,WAAa,KAAK,KACrCS,EAAS,KAAK,CACZ,QAAS,qCACT,SAAU,UAClB,CAAO,EACDR,EAAO,aAAa,WAAY,EAAI,IAEpCA,EAAO,gBAAgB,WAAY,EAAK,EACxCE,EAAM,YAAc,KAAK,IAAI,QAAO,EACpCA,EAAM,aAAeH,EAAiB,UAEzC,CACH,EACA,SAASK,EAAUK,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACAb,EAAO,iBAAiB,QAASE,EAAM,UAAU,EACjD,MAAMY,EAAO,SAAS,cAAc,kBAAkB,EACxCC,EAAUD,EAAMR,CAAO"}